name: Build EWDK Toolkit on Linux

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build-ewdk:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0-rc.1'

      - name: 安装基础依赖
        run: |
          sudo apt update
          sudo apt install -y zstd fuseiso p7zip-full git build-essential aria2

      - name: 获取并设置EWDK URL
        id: set-url
        run: |
          EWDK_URL=$(go run scripts/get_ewdk_url.go)
          echo "EWDK_ISO_URL=$EWDK_URL" >> $GITHUB_ENV
          echo "✅ 下载URL设置完成: $EWDK_URL"

      # 优化的网络诊断和稳定下载方案
      - name: 稳定下载ISO
        run: |
          # 可靠的速度诊断
          echo "📶 网络质量诊断..."
          curl -Lo /dev/null -skw """
              下载速度: %{speed_download} bps
              连接时间: %{time_connect}秒
              传输时间: %{time_total}秒\n
              """ ${{ env.EWDK_ISO_URL }} > /tmp/speedtest.txt 2>&1
          cat /tmp/speedtest.txt
          
          # 自适应下载策略
          MAX_CONN=16
          MIN_SPEED=$((10*1024*1024))  # 10MB/s
          if grep -q "下载速度: [0-9]." /tmp/speedtest.txt; then
            SPEED=$(grep "下载速度" /tmp/speedtest.txt | awk '{print $2}')
            if [ $SPEED -lt $MIN_SPEED ]; then
              MAX_CONN=32
              echo "⚠️ 网络较慢 ($((SPEED/1024/1024))MB/s)，启用加速模式 (32线程)"
            else
              echo "⚡ 网络良好 ($((SPEED/1024/1024))MB/s)，使用标准模式"
            fi
          fi
          
          # 稳定下载命令
          aria2c --summary-interval=30 \
            -x $MAX_CONN -s 8 -k 2M -c "${{ env.EWDK_ISO_URL }}" \
            -d /tmp -o ewdk.iso \
            --file-allocation=falloc \
            --retry-wait=3 \
            --max-tries=10 \
            --timeout=900 \
            --check-certificate=false
          
          # 验证下载文件
          FILE_SIZE=$(stat -c%s /tmp/ewdk.iso)
          echo "📦 下载大小: $((FILE_SIZE/1024/1024))MB"
          [ $FILE_SIZE -gt 500000000 ] || (echo "❌ 文件太小"; exit 1)

      # 以下步骤保持不变...
      - name: 挂载ISO
        run: |
          sudo mkdir -p /mnt/ewdk
          sudo mount -o loop /tmp/ewdk.iso /mnt/ewdk
          
      - name: 安装Go模块
        run: go mod tidy
          
      - name: 运行提取程序
        timeout-minutes: 30
        run: go run .
        
      - name: 创建wdk压缩包
        run: |
          tar cf - dist/wdk | zstd --ultra -22 -T0 -o /tmp/wdk.tar.zst
          echo "wdk_path=/tmp/wdk.tar.zst" >> $GITHUB_ENV
          
      - name: 上传wdk成品
        uses: actions/upload-artifact@v4
        with:
          name: wdk.tar.zst
          path: ${{ env.wdk_path }}
          
      - name: 创建sdk压缩包
        run: |
          tar cf - dist/sdk | zstd --ultra -22 -T0 -o /tmp/sdk.tar.zst
          echo "sdk_path=/tmp/sdk.tar.zst" >> $GITHUB_ENV
          
      - name: 上传sdk成品
        uses: actions/upload-artifact@v4
        with:
          name: sdk.tar.zst
          path: ${{ env.sdk_path }}
          
      - name: 清理资源
        run: |
          sudo umount /mnt/ewdk || true
          sudo rm -rf /mnt/ewdk /tmp/ewdk.iso /tmp/*.tar.zst
